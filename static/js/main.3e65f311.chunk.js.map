{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","aboutText","role","onClick","toggleMode","for","TextForm","_useState","useState","_useState2","_slicedToArray","text","setText","Fragment","style","color","heading","htmlFor","value","backgroundColor","onChange","event","console","log","target","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","Alert","alert","class","word","lower","charAt","slice","capitalize","msg","defaultProps","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"mMAOe,SAASA,EAAOC,GAC7B,OACEC,IAAAC,cAAA,OAAKC,UAAS,6CACZF,IAAAC,cAAA,OACEC,UAAS,wBAAAC,OACQ,UAAfJ,EAAMK,KAAmB,OAAS,UAGpCJ,IAAAC,cAAA,KAAGC,UAAU,eAAeG,KAAK,KAC9BN,EAAMO,OAETN,IAAAC,cAAA,UACEC,UAAU,iBACVK,KAAK,SACLC,iBAAe,WACfC,iBAAe,0BACfC,gBAAc,yBACdC,gBAAc,QACdC,aAAW,qBAEXZ,IAAAC,cAAA,QAAMC,UAAU,yBAElBF,IAAAC,cAAA,OAAKC,UAAU,2BAA2BW,GAAG,0BAC3Cb,IAAAC,cAAA,MAAIC,UAAU,mCACZF,IAAAC,cAAA,MAAIC,UAAU,YACZF,IAAAC,cAAA,KAAGC,UAAU,kBAAkBY,eAAa,OAAOT,KAAK,KAAI,SAI9DL,IAAAC,cAAA,MAAIC,UAAU,YACZF,IAAAC,cAAA,KAAGC,UAAU,WAAWG,KAAK,KAC1BN,EAAMgB,YAGXf,IAAAC,cAAA,MAAIC,UAAU,qBACZF,IAAAC,cAAA,KACEC,UAAU,2BACVG,KAAK,IACLW,KAAK,SACLR,iBAAe,WACfG,gBAAc,SACf,YAGDX,IAAAC,cAAA,MAAIC,UAAU,iBACZF,IAAAC,cAAA,UACED,IAAAC,cAAA,KAAGC,UAAU,gBAAgBG,KAAK,KAAI,WAIxCL,IAAAC,cAAA,UACED,IAAAC,cAAA,KAAGC,UAAU,gBAAgBG,KAAK,KAAI,mBAIxCL,IAAAC,cAAA,UACED,IAAAC,cAAA,MAAIC,UAAU,sBAEhBF,IAAAC,cAAA,UACED,IAAAC,cAAA,KAAGC,UAAU,gBAAgBG,KAAK,KAAI,0BAM5CL,IAAAC,cAAA,MAAIC,UAAU,YACZF,IAAAC,cAAA,KAAGC,UAAU,qBAAoB,cAOrCF,IAAAC,cAAA,OACEC,UAAS,+BAAAC,OACQ,UAAfJ,EAAMK,KAAmB,OAAS,UAGpCJ,IAAAC,cAAA,SACEC,UAAU,mBACVe,QAASlB,EAAMmB,WACfX,KAAK,WACLS,KAAK,SACLH,GAAG,2BAELb,IAAAC,cAAA,SAAOC,UAAU,mBAAmBiB,IAAI,0BAAyB,wBC1F9D,SAASC,EAASrB,GAC/B,IAgCEsB,EACsBC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpB,OACEvB,IAAAC,cAAAD,IAAA2B,SAAA,KACE3B,IAAAC,cAAA,OACEC,UAAU,YACV0B,MAAO,CAAEC,MAAsB,SAAf9B,EAAMK,KAAkB,QAAU,UAElDJ,IAAAC,cAAA,UAAKF,EAAM+B,SACX9B,IAAAC,cAAA,OAAKC,UAAU,QACbF,IAAAC,cAAA,SAAO8B,QAAQ,QAAQ7B,UAAU,cAAa,oBAG9CF,IAAAC,cAAA,YACEC,UAAU,eACV8B,MAAOP,EACPG,MAAO,CACLK,gBAAgC,SAAflC,EAAMK,KAAkB,OAAS,QAClDyB,MAAsB,SAAf9B,EAAMK,KAAkB,QAAU,SAE3C8B,SAvBa,SAACC,GACtBC,QAAQC,IAAI,aACZX,EAAQS,EAAMG,OAAON,QAsBbnB,GAAG,QACH0B,KAAK,OAGTvC,IAAAC,cAAA,UAAQC,UAAU,uBAAuBe,QAzDzB,WACpBmB,QAAQC,IAAI,yBACZ,IAAIG,EAAUf,EAAKgB,cACnBf,EAAQc,GACRzC,EAAM2C,UAAU,yBAA0B,aAqD2B,wBAGjE1C,IAAAC,cAAA,UAAQC,UAAU,uBAAuBe,QAtDzB,WACpBmB,QAAQC,IAAI,yBACZ,IAAIG,EAAUf,EAAKkB,cACnBjB,EAAQc,GACRzC,EAAM2C,UAAU,yBAA0B,aAkD2B,wBAGjE1C,IAAAC,cAAA,UAAQC,UAAU,uBAAuBe,QAnDtB,WAEvBS,EADc,IAEd3B,EAAM2C,UAAU,uBAAwB,aAgDgC,cAGpE1C,IAAAC,cAAA,UAAQC,UAAU,uBAAuBe,QAjDvB,WACtB,IAAIQ,EAAOmB,SAASC,eAAe,SACnCpB,EAAKqB,SACLC,UAAUC,UAAUC,UAAUxB,EAAKO,OACnCjC,EAAM2C,UAAU,sBAAuB,aA6CgC,aAGnE1C,IAAAC,cAAA,UAAQC,UAAU,uBAAuBe,QA9CrB,WACxB,IAAIuB,EAAUf,EAAKyB,MAAM,QACzBxB,EAAQc,EAAQW,KAAK,MACrBpD,EAAM2C,UAAU,uBAAwB,aA2CiC,wBAKvE1C,IAAAC,cAAA,OACEC,UAAU,YACV0B,MAAO,CAAEC,MAAsB,SAAf9B,EAAMK,KAAkB,QAAU,UAElDJ,IAAAC,cAAA,UAAI,qBACJD,IAAAC,cAAA,SACGwB,EAAKyB,MAAM,KAAKE,OAAO,cAAY3B,EAAK2B,OAAO,eAElDpD,IAAAC,cAAA,SAAI,KAAQwB,EAAKyB,MAAM,KAAKE,OAAO,oBACnCpD,IAAAC,cAAA,UAAI,WACJD,IAAAC,cAAA,SACGwB,EAAK2B,OAAS,EACX3B,EACA,yDCxFC,SAAS4B,EAAMtD,GAK5B,OACEA,EAAMuD,OACJtD,IAAAC,cAAA,OACEsD,MAAK,eAAApD,OAAiBJ,EAAMuD,MAAM/C,KAAI,gCACtCS,KAAK,SAELhB,IAAAC,cAAA,cAVa,SAACuD,GAClB,IAAMC,EAAQD,EAAKb,cACnB,OAAOc,EAAMC,OAAO,GAAGjB,cAAgBgB,EAAME,MAAM,GAQtCC,CAAW7D,EAAMuD,MAAM/C,OAAe,MAAIR,EAAMuD,MAAMO,KF8FvE/D,EAAOgE,aAAe,CACpBxD,MAAO,iBACPS,UAAW,mBG7BEgD,MAxEf,WAAe,IAAA1C,EACWC,mBAAS,SAAQC,EAAAC,YAAAH,EAAA,GAAlCjB,EAAImB,EAAA,GAAEyC,EAAOzC,EAAA,GAAuB0C,EAEjB3C,mBAAS,MAAK4C,EAAA1C,YAAAyC,EAAA,GAAjCX,EAAKY,EAAA,GAAEC,EAAQD,EAAA,GAEhBxB,EAAY,SAAC0B,EAAS7D,GAC1B4D,EAAS,CACPN,IAAKO,EACL7D,KAAMA,IAER8D,WAAW,WACTF,EAAS,OACR,OAGCjD,EAAa,WACJ,UAATd,GACF4D,EAAQ,QACRpB,SAAS0B,KAAK1C,MAAMK,gBAAkB,UACtCS,EAAU,6BAA8B,aASxCsB,EAAQ,SACRpB,SAAS0B,KAAK1C,MAAMK,gBAAkB,QACtCS,EAAU,8BAA+B,WACzCE,SAAStC,MAAQ,0BAIrB,OACEN,IAAAC,cAAAD,IAAA2B,SAAA,KAEE3B,IAAAC,cAACH,EAAM,CACLQ,MAAM,YACNS,UAAU,QACVX,KAAMA,EACNc,WAAYA,IAEdlB,IAAAC,cAACoD,EAAK,CAACC,MAAOA,IACdtD,IAAAC,cAAA,OAAKC,UAAU,kBAebF,IAAAC,cAACmB,EAAQ,CACPsB,UAAWA,EACXZ,QAAQ,4BACR1B,KAAMA,EACNc,WAAYA,OC5DPqD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDDY,IAASC,WAAWzC,SAASC,eAAe,SACpDyC,OACHtF,IAAAC,cAACD,IAAMuF,WAAU,KACfvF,IAAAC,cAAC8D,EAAG,QAORQ","file":"static/js/main.3e65f311.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\n// If you are using react-router then you have to change <a> to <a> and href to to\r\n// Github pages doesn't work well with routing thats why removing all the Link's and To's\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg bg-body-tertiary `}>\r\n      <div\r\n        className={`container-fluid text-${\r\n          props.mode === \"light\" ? \"dark\" : \"light\"\r\n        }`}\r\n      >\r\n        <a className=\"navbar-brand\" href=\"/\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/\">\r\n                {props.aboutText}\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item dropdown\">\r\n              <a\r\n                className=\"nav-link dropdown-toggle\"\r\n                href=\"/\"\r\n                role=\"button\"\r\n                data-bs-toggle=\"dropdown\"\r\n                aria-expanded=\"false\"\r\n              >\r\n                Dropdown\r\n              </a>\r\n              <ul className=\"dropdown-menu\">\r\n                <li>\r\n                  <a className=\"dropdown-item\" href=\"/\">\r\n                    Action\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a className=\"dropdown-item\" href=\"/\">\r\n                    Another action\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <hr className=\"dropdown-divider\" />\r\n                </li>\r\n                <li>\r\n                  <a className=\"dropdown-item\" href=\"/\">\r\n                    Something else here\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link disabled\">Disabled</a>\r\n            </li>\r\n          </ul>\r\n          {/* <form className=\"d-flex\" role=\"search\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n      </form> */}\r\n          <div\r\n            className={`form-check form-switch text-${\r\n              props.mode === \"light\" ? \"dark\" : \"light\"\r\n            }`}\r\n          >\r\n            <input\r\n              className=\"form-check-input\"\r\n              onClick={props.toggleMode}\r\n              type=\"checkbox\"\r\n              role=\"switch\"\r\n              id=\"flexSwitchCheckDefault\"\r\n            />\r\n            <label className=\"form-check-label\" for=\"flexSwitchCheckDefault\">\r\n              Enable Dark Mode\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: \"Set Title here\",\r\n  aboutText: \"About Text here\",\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = () => {\r\n    console.log(\"Uppercase was clicked\");\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Uppercase\", \"success\");\r\n  };\r\n  const handleLoClick = () => {\r\n    console.log(\"Lowercase was clicked\");\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Lowercase\", \"success\");\r\n  };\r\n  const handleClearClick = () => {\r\n    let newText = \"\";\r\n    setText(newText);\r\n    props.showAlert(\"Cleared the textarea\", \"success\");\r\n  };\r\n  const handleCopyClick = () => {\r\n    var text = document.getElementById(\"myBox\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\"Copied to clipboard\", \"success\");\r\n  };\r\n  const handleExtraSpaces = () => {\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n    props.showAlert(\"Extra spaces removed\", \"success\");\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    console.log(\"On change\");\r\n    setText(event.target.value);\r\n  };\r\n  const [text, setText] = useState(\"\");\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container\"\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}\r\n      >\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"myBox\" className=\"form-label\">\r\n            Example textarea\r\n          </label>\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={text}\r\n            style={{\r\n              backgroundColor: props.mode === \"dark\" ? \"grey\" : \"white\",\r\n              color: props.mode === \"dark\" ? \"white\" : \"black\",\r\n            }}\r\n            onChange={handleOnChange}\r\n            id=\"myBox\"\r\n            rows=\"8\"\r\n          ></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>\r\n          Convert to Uppercase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleLoClick}>\r\n          Convert to Lowercase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleClearClick}>\r\n          Clear Text\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleCopyClick}>\r\n          Copy Text\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleExtraSpaces}>\r\n          Remove Extra Spaces\r\n        </button>\r\n      </div>\r\n\r\n      <div\r\n        className=\"container\"\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}\r\n      >\r\n        <h1>Your text summary</h1>\r\n        <p>\r\n          {text.split(\" \").length} words and {text.length} characters\r\n        </p>\r\n        <p>{0.008 * text.split(\" \").length} minutes to read</p>\r\n        <h2>Preview</h2>\r\n        <p>\r\n          {text.length > 0\r\n            ? text\r\n            : \"Enter something in the box above to preview it here\"}\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Alert(props) {\r\n  const capitalize = (word) => {\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  };\r\n  return (\r\n    props.alert && (\r\n      <div\r\n        class={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n        role=\"alert\"\r\n      >\r\n        <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\r\n      </div>\r\n    )\r\n  );\r\n}\r\n","import \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\n// import About from \"./components/About\";\nimport Alert from \"./components/Alert\";\nimport React, { useState } from \"react\";\n// import { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\"); // whetherr dark mode is enabled or not\n\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#1f2050\";\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      // document.title = \"Textutils - Dark Mode\";\n      // setInterval(() => {\n      //   document.title = \"Textutils is Amazing Mode\";\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title = \"Install textutils now\";\n      // }, 2000);\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode has been enabled\", \"success\");\n      document.title = \"Textutils - Dark Mode\";\n    }\n  };\n\n  return (\n    <>\n      {/* <Router> */}\n      <Navbar\n        title=\"textUtils\"\n        aboutText=\"About\"\n        mode={mode}\n        toggleMode={toggleMode}\n      />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n        {/* <Routes>\n            <Route path=\"/about\" element={<About />} />\n            <Route\n              path=\"/\"\n              element={\n                <TextForm\n                  showAlert={showAlert}\n                  heading=\"Enter the text to analyze\"\n                  mode={mode}\n                  toggleMode={toggleMode}\n                />\n              }\n            />\n          </Routes> */}\n        <TextForm\n          showAlert={showAlert}\n          heading=\"Enter the text to analyze\"\n          mode={mode}\n          toggleMode={toggleMode}\n        />\n      </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}